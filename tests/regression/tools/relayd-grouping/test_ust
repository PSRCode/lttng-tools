#!/bin/bash
#
# Copyright (C) - 2018 Jonathan Rajotte <jonathan.rajotte-julien@efficios.com>
#
# This library is free software; you can redistribute it and/or modify it under
# the terms of the GNU Lesser General Public License as published by the Free
# Software Foundation; version 2.1 of the License.
#
# This library is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more
# details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this library; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301 USA

TEST_DESC="LTTng relayd filesystem grouping - Userspace tracing"

CURDIR=$(dirname $0)/
TESTDIR=$CURDIR/../../..
NR_ITER=10
NR_USEC_WAIT=100
TESTAPP_PATH="$TESTDIR/utils/testapp"
TESTAPP_NAME="gen-ust-events"
TESTAPP_BIN="$TESTAPP_PATH/$TESTAPP_NAME/$TESTAPP_NAME"
EVENT_NAME="tp:tptest"

TRACE_PATH=$(mktemp -d)

NUM_TESTS=113

source $TESTDIR/utils/utils.sh

if [ ! -x "$TESTAPP_BIN" ]; then
	BAIL_OUT "No UST events binary detected."
fi

function test_ust_uid_live_static_name ()
{
	local session_name=$(randstring 16 0)
	local channel_name=$(randstring 8 0)

	diag "Test UST uid buffer live with session name"

	create_lttng_session_uri $session_name net://localhost --live
	enable_ust_lttng_channel_ok $session_name $channel_name "--buffers-uid"
	enable_ust_lttng_event_ok $session_name $EVENT_NAME $channel_name
	start_lttng_tracing_ok $session_name

	$TESTAPP_BIN $NR_ITER $NR_USEC_WAIT

	stop_lttng_tracing_ok $session_name
	destroy_lttng_session_ok $session_name

	validate_trace $EVENT_NAME $TRACE_PATH/$session_name/$HOSTNAME*
}

function test_ust_pid_live_static_name ()
{
	local session_name=$(randstring 16 0)
	local channel_name=$(randstring 8 0)

	diag "Test UST pid buffer live with session name"

	create_lttng_session_uri $session_name net://localhost --live
	enable_ust_lttng_channel_ok $session_name $channel_name "--buffers-pid"
	enable_ust_lttng_event_ok $session_name $EVENT_NAME $channel_name
	start_lttng_tracing_ok $session_name

	$TESTAPP_BIN $NR_ITER $NR_USEC_WAIT

	stop_lttng_tracing_ok $session_name
	destroy_lttng_session_ok $session_name

	validate_trace $EVENT_NAME $TRACE_PATH/$session_name/$HOSTNAME*
}

function test_ust_uid_live_static_name_custom_output ()
{
	local session_name=$(randstring 16 0)
	local channel_name=$(randstring 8 0)
	local custom_output="my_live_custom_output"

	diag "Test UST uid buffer live with session name, custom output"

	create_lttng_session_uri $session_name net://localhost/$custom_output --live
	enable_ust_lttng_channel_ok $session_name $channel_name "--buffers-uid"
	enable_ust_lttng_event_ok $session_name $EVENT_NAME $channel_name
	start_lttng_tracing_ok $session_name

	$TESTAPP_BIN $NR_ITER $NR_USEC_WAIT

	stop_lttng_tracing_ok $session_name
	destroy_lttng_session_ok $session_name

	validate_trace $EVENT_NAME $TRACE_PATH/$session_name/$HOSTNAME*/$custom_output
}

function test_ust_uid_streaming_static_name ()
{
	local session_name=$(randstring 16 0)
	local channel_name=$(randstring 8 0)

	diag "Test UST uid buffer streaming with session name"

	create_lttng_session_uri $session_name net://localhost
	enable_ust_lttng_channel_ok $session_name $channel_name "--buffers-uid"
	enable_ust_lttng_event_ok $session_name $EVENT_NAME $channel_name
	start_lttng_tracing_ok $session_name

	$TESTAPP_BIN $NR_ITER $NR_USEC_WAIT

	stop_lttng_tracing_ok $session_name
	destroy_lttng_session_ok $session_name

	validate_trace $EVENT_NAME $TRACE_PATH/$session_name/$HOSTNAME*
}

function test_ust_pid_streaming_static_name ()
{
	local session_name=$(randstring 16 0)
	local channel_name=$(randstring 8 0)

	diag "Test UST pid buffer streaming with session name"

	create_lttng_session_uri $session_name net://localhost
	enable_ust_lttng_channel_ok $session_name $channel_name "--buffers-pid"
	enable_ust_lttng_event_ok $session_name $EVENT_NAME $channel_name
	start_lttng_tracing_ok $session_name

	$TESTAPP_BIN $NR_ITER $NR_USEC_WAIT

	stop_lttng_tracing_ok $session_name
	destroy_lttng_session_ok $session_name

	validate_trace $EVENT_NAME $TRACE_PATH/$session_name/$HOSTNAME*
}

function test_ust_uid_streaming_static_name_custom_output ()
{
	local session_name=$(randstring 16 0)
	local channel_name=$(randstring 8 0)
	local custom_output="custom_second_token"

	diag "Test UST uid buffer streaming with session name, custom output"

	create_lttng_session_uri $session_name net://localhost/$custom_output
	enable_ust_lttng_channel_ok $session_name $channel_name "--buffers-uid"
	enable_ust_lttng_event_ok $session_name $EVENT_NAME $channel_name
	start_lttng_tracing_ok $session_name

	$TESTAPP_BIN $NR_ITER $NR_USEC_WAIT

	stop_lttng_tracing_ok $session_name
	destroy_lttng_session_ok $session_name

	validate_trace $EVENT_NAME $TRACE_PATH/$session_name/$HOSTNAME*/$custom_output
}

function test_ust_uid_streaming_rotate_static_name ()
{
	local session_name=$(randstring 16 0)
	local channel_name=$(randstring 8 0)

	diag "Test UST uid buffer rotate with session name"

	create_lttng_session_uri $session_name net://localhost
	enable_ust_lttng_channel_ok $session_name $channel_name "--buffers-uid"
	enable_ust_lttng_event_ok $session_name $EVENT_NAME $channel_name
	start_lttng_tracing_ok $session_name

	$TESTAPP_BIN $NR_ITER $NR_USEC_WAIT
	rotate_session_ok $session_name

	stop_lttng_tracing_ok $session_name
	destroy_lttng_session_ok $session_name

	validate_trace $EVENT_NAME $TRACE_PATH/$session_name/$HOSTNAME*
}

function test_ust_uid_streaming_rotate_static_name_custom_output ()
{
	local session_name=$(randstring 16 0)
	local channel_name=$(randstring 8 0)
	local custom_output="rotate_custom_path"

	diag "Test UST uid buffer rotate with session name, custom output"

	create_lttng_session_uri $session_name net://localhost/$custom_output
	enable_ust_lttng_channel_ok $session_name $channel_name "--buffers-uid"
	enable_ust_lttng_event_ok $session_name $EVENT_NAME $channel_name
	start_lttng_tracing_ok $session_name

	$TESTAPP_BIN $NR_ITER $NR_USEC_WAIT
	rotate_session_ok $session_name


	stop_lttng_tracing_ok $session_name
	destroy_lttng_session_ok $session_name

	validate_trace $EVENT_NAME $TRACE_PATH/$session_name/$HOSTNAME*/$custom_output
}

function test_ust_pid_streaming_rotate_static_name ()
{
	local session_name=$(randstring 16 0)
	local channel_name=$(randstring 8 0)

	diag "Test UST pid buffer rotate with session_name"

	create_lttng_session_uri $session_name net://localhost
	enable_ust_lttng_channel_ok $session_name $channel_name "--buffers-pid"
	enable_ust_lttng_event_ok $session_name $EVENT_NAME $channel_name
	start_lttng_tracing_ok $session_name

	$TESTAPP_BIN $NR_ITER $NR_USEC_WAIT
	rotate_session_ok $session_name

	stop_lttng_tracing_ok $session_name
	destroy_lttng_session_ok $session_name

	validate_trace $EVENT_NAME $TRACE_PATH/$session_name/$HOSTNAME*
}

function test_ust_uid_streaming_snapshot_static_name ()
{
	local session_name=$(randstring 16 0)
	local channel_name=$(randstring 8 0)

	diag "Test UST uid buffer snapshot streaming with session name using 'create --snapshot'"

	create_lttng_session_uri $session_name net://localhost --snapshot
	enable_ust_lttng_channel_ok $session_name $channel_name "--buffers-uid"
	enable_ust_lttng_event_ok $session_name $EVENT_NAME $channel_name
	start_lttng_tracing_ok $session_name

	$TESTAPP_BIN $NR_ITER $NR_USEC_WAIT
	lttng_snapshot_record $session_name

	stop_lttng_tracing_ok $session_name
	destroy_lttng_session_ok $session_name

	# Snapshot session have no datetime associated with them.
	# Do not use '*' to glob the datetime.
	validate_trace $EVENT_NAME $TRACE_PATH/$session_name/$HOSTNAME*
}

function test_ust_pid_streaming_snapshot_static_name ()
{
	local session_name=$(randstring 16 0)
	local channel_name=$(randstring 8 0)
	local file_sync_after_first=$(mktemp -u)
	local file_sync_before_last=$(mktemp -u)

	diag "Test UST pid buffer snapshot streaming with session name using 'create --snapshot'"

	create_lttng_session_uri $session_name net://localhost --snapshot
	enable_ust_lttng_channel_ok $session_name $channel_name "--buffers-pid"
	enable_ust_lttng_event_ok $session_name $EVENT_NAME $channel_name
	start_lttng_tracing_ok $session_name

	$TESTAPP_BIN $NR_ITER $NR_USEC_WAIT ${file_sync_after_first} ${file_sync_before_last} /dev/null 2>&1 &

	while [ ! -f "${file_sync_after_first}" ]; do
		sleep 0.5
	done

	lttng_snapshot_record $session_name

	touch ${file_sync_before_last}
	wait

	stop_lttng_tracing_ok $session_name
	destroy_lttng_session_ok $session_name

	validate_trace $EVENT_NAME $TRACE_PATH/$session_name/$HOSTNAME*/snapshot-1*

	rm -rf ${file_sync_after_first}
	rm -rf ${file_sync_before_last}
}

function test_ust_uid_streaming_snapshot_add_output_default_name ()
{
	local session_name=$(randstring 16 0)
	local channel_name=$(randstring 8 0)
	diag "Test UST uid buffer snapshot using 'add-output' with default snapshot name"

	create_lttng_session_no_output $session_name
	enable_lttng_mmap_overwrite_ust_channel $session_name $channel_name
	enable_ust_lttng_event_ok $session_name $EVENT_NAME $channel_name
	start_lttng_tracing_ok $session_name

	$TESTAPP_BIN $NR_ITER $NR_USEC_WAIT

	lttng_snapshot_add_output_ok $session_name "net://localhost"
	lttng_snapshot_record $session_name

	stop_lttng_tracing_ok $session_name
	destroy_lttng_session_ok $session_name

	validate_trace $EVENT_NAME $TRACE_PATH/$session_name/$HOSTNAME*/snapshot-1*
}

function test_ust_uid_streaming_snapshot_add_output_custom_name ()
{
	local session_name=$(randstring 16 0)
	local channel_name=$(randstring 8 0)
	local snapshot_name="this_is_my_snapshot"
	diag "Test UST uid buffer snapshot using 'add-output' with custom snapshot name"

	create_lttng_session_no_output $session_name
	enable_lttng_mmap_overwrite_ust_channel $session_name $channel_name
	enable_ust_lttng_event_ok $session_name $EVENT_NAME $channel_name
	start_lttng_tracing_ok $session_name

	$TESTAPP_BIN $NR_ITER $NR_USEC_WAIT

	lttng_snapshot_add_output_ok $session_name "net://localhost" "-n $snapshot_name"
	lttng_snapshot_record $session_name

	stop_lttng_tracing_ok $session_name
	destroy_lttng_session_ok $session_name

	validate_trace $EVENT_NAME $TRACE_PATH/$session_name/$HOSTNAME*/$snapshot_name*
}

function test_ust_uid_streaming_snapshot_add_output_custom_name_custom_output ()
{
	local session_name=$(randstring 16 0)
	local channel_name=$(randstring 8 0)
	local snapshot_name="this_is_my_snapshot"
	local custom_output="this/is/my/custom/path"
	diag "Test UST uid buffer snapshot using 'add-output' with custom snapshot name and custom output path"

	create_lttng_session_no_output $session_name
	enable_lttng_mmap_overwrite_ust_channel $session_name $channel_name
	enable_ust_lttng_event_ok $session_name $EVENT_NAME $channel_name
	start_lttng_tracing_ok $session_name

	$TESTAPP_BIN $NR_ITER $NR_USEC_WAIT

	lttng_snapshot_add_output_ok $session_name "net://localhost/$custom_output" "-n $snapshot_name"
	lttng_snapshot_record $session_name

	stop_lttng_tracing_ok $session_name
	destroy_lttng_session_ok $session_name

	validate_trace $EVENT_NAME $TRACE_PATH/$session_name/$HOSTNAME*/$custom_output/$snapshot_name*
}

plan_tests $NUM_TESTS

print_test_banner "$TEST_DESC"

# Set the relayd in --group-output-by-session mode
start_lttng_relayd "-o $TRACE_PATH --group-output-by-session"
start_lttng_sessiond

tests=(
	test_ust_uid_live_static_name
	test_ust_pid_live_static_name
	test_ust_uid_live_static_name_custom_output
	test_ust_uid_streaming_static_name
	test_ust_pid_streaming_static_name
	test_ust_uid_streaming_static_name_custom_output
	test_ust_uid_streaming_rotate_static_name
	test_ust_uid_streaming_rotate_static_name_custom_output
	test_ust_pid_streaming_rotate_static_name
	test_ust_uid_streaming_snapshot_static_name
	test_ust_pid_streaming_snapshot_static_name
	test_ust_uid_streaming_snapshot_add_output_default_name
	test_ust_uid_streaming_snapshot_add_output_custom_name
	test_ust_uid_streaming_snapshot_add_output_custom_name_custom_output
)

for fct_test in ${tests[@]};
do
	${fct_test}
done

rm -rf $TRACE_PATH

stop_lttng_sessiond
stop_lttng_relayd
